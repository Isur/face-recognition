ADDING STUFF
1)create group of people (PersonGroup)
POST http://localhost:5000/add/addPersonGroup/
req: {
    name: String
    userData: String
    id: String   
}

res: ""

2)add person to personGroup
POST http://localhost:5000/add/addPerson/
req: {
    personGroupId: String
    name: String
    userData: String
}

res: ...

3) add face to person
POST http://localhost:5000/add/addFace/
req: {
    personGroupId: String
    personId: String
    image: String // url of image
    userData: String
}

res: {
    persistedFaceId: String
}

4) add face to person from file
POST http://localhost:5000/add/addFaceFile/persongroup/:personGroupId/persons/:personId
req: image //binary image for example .jpg

res: {
    persistedFaceId: String
}

FACE STUFF
5) Get information about face from file
POST http://localhost:5000/face/detect/file/
req: image //binary image for example .jpg

res: [
    faceId: {},
    faceRectangle: {},
    faceLandmarks: {},
    faceAttributes: {}
]


6) Get information about face from url
POST http://localhost:5000/face/detect/
req: {
    imageURL: String // url of image
}

res: [
    faceId: {},
    faceRectangle: {},
    faceLandmarks: {},
    faceAttributes: {}
]

7) Identify face
POST http://localhost:5000/face/identify/
req: {
    faceIds: array of strings
    personGroupId: String
}

res: [
    ...
    {
        faceId: String,
        candidates: [
            ...
            {
                personId: String,
                confidence: Number

            }
        ]
    }
]

GET STUFF
8) get all from  given list
GET http://localhost:5000/get/all/:faceListId

res: {
    persistedFaces: [],
    faceListId: String,
    name: String,
    userData: String

}

9) get all lists
GET http://localhost:5000/get/lists

res: [
    ...
    {
        faceListId: String
        name: String
        userData: String
    }
]

10) get all person groups
GET http://localhost:5000/get/personGroups

res: [
    ...
    {
        personGroupId: String
        name: String
        userData: String
    }
]

11) get person group by id
GET http://localhost:5000/get/personGroups/:personGroupId

res: {
    "personGroupId": String,
    "name": String,
    "userData": String
}

12) get people from person group
GET http://localhost:5000/get/personlist/:personGroupId

res: [
    ...
    {
        personId: String
        persistedFacesIds: []
        name: String
        userData: String
    }
]

13) get person from person group by id
GET http://localhost:5000/get/person?personGroupId=[]&personId=[]

res: {
    "personId": String,
    "persistedFaceIds": [],
    "name": String,
    "userData": String
}

14) get person face by id/ by person/ by person group
GET http://localhost:5000/get/personface?personGroupId=[]&personId=[]&face_id=[]

res: {
    "persistedFaceId": String,
    "userData": String
}

15) 16) 17) - remove

TRAINING
18) POST http://localhost:5000/train/traingroup/
req.body: {
    personGroupId: String
}

res: ...

19) POST http://localhost:5000/train/trainstatus/
req.body: {
    personGroupId: String
}

res: ...

